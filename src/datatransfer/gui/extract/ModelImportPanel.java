/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ModelPanel.java
 *
 * Created on 2012-8-24, 9:13:09
 */
package datatransfer.gui.extract;

import datatransfer.Output;
import datatransfer.config.DataTransferConfig;
import datatransfer.extract.ModelImporter;
import datatransfer.extract.SourceModelPacker;
import datatransfer.util.DataTransferException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.ddlutils.model.Database;
import org.executequery.databasemediators.DatabaseConnection;
import org.executequery.repository.RepositoryCache;
import pl.mpak.sky.gui.mr.ModalResult;
import pl.mpak.sky.gui.swing.MessageBox;
import pl.mpak.util.StringUtil;

/**
 *
 * @author kowen
 */
public class ModelImportPanel extends javax.swing.JPanel {

    private Database database;
    private DatabaseConnection destination;
    private Output output;
    private TransferPanel transferPanel = null;

    /** Creates new form ModelPanel */
    public ModelImportPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBuildTempModel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(768, 40));

        btnBuildTempModel.setText("生成临时表结构"); // NOI18N
        btnBuildTempModel.setName("btnBuildTempModel"); // NOI18N
        btnBuildTempModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuildTempModelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBuildTempModel)
                .addContainerGap(641, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBuildTempModel)
                .addContainerGap())
        );

        add(jPanel1, java.awt.BorderLayout.NORTH);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextPane1.setEditable(false);
        jTextPane1.setText("说明：\n临时表是为了执行跨数据源查询在目标库中生成的表结构，临时表结构是根据查询模型分析出的各数据源所需的表、列组成的。生成临时表后，系统才能从数据源提取所需数据。\n\n注意：生成临时表会覆盖目标库中已存在的同名临时表，并清除其中的数据。"); // NOI18N
        jTextPane1.setName("jTextPane1"); // NOI18N
        jScrollPane1.setViewportView(jTextPane1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuildTempModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuildTempModelActionPerformed
        if(this.getTransferPanel().getExtractPanel().hasRunningExtractTask()){
            MessageBox.show("提示", "有正在运行的临时数据抽取任务，请先停止");
        }
        if (MessageBox.show(this, "提示", "创建临时库会覆盖原来创建的临时库表和数据，是否继续？", ModalResult.YESNO, MessageBox.QUESTION) == ModalResult.YES) {
            ModelImporter mi = new ModelImporter(getDestination(), database);
            mi.setOutput(getOutput());
            mi.importModel();
        }
    }//GEN-LAST:event_btnBuildTempModelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuildTempModel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the output
     */
    public Output getOutput() {
        return output;
    }

    /**
     * @param output the output to set
     */
    public void setOutput(Output output) {
        this.output = output;
    }

    /**
     * @return the database
     */
    public Database getDatabase() {
        return database;
    }

    /**
     * @param database the database to set
     */
    public void setDatabase(Database database) {
        this.database = database;
    }

    /**
     * @return the destination
     */
    public DatabaseConnection getDestination() {
        return destination;
    }

    /**
     * @param destination the destination to set
     */
    public void setDestination(DatabaseConnection destination) {
        this.destination = destination;
    }

    /**
     * @return the transferPanel
     */
    public TransferPanel getTransferPanel() {
        return transferPanel;
    }

    /**
     * @param transferPanel the transferPanel to set
     */
    public void setTransferPanel(TransferPanel transferPanel) {
        this.transferPanel = transferPanel;
    }
}
