/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TransferPanel.java
 *
 * Created on 2012-8-24, 14:46:49
 */
package datatransfer.gui.extract;

import datatransfer.config.DataTransferConfig;
import datatransfer.extract.SourceModelPacker;
import datatransfer.util.DataTransferException;
import org.executequery.repository.RepositoryCache;

/**
 *
 * @author kowen
 */
public class TransferPanel extends javax.swing.JPanel {

    private SourceModelPacker sourceModelPacker = null;
    private DataTransferConfig config = null;
    private ModelImportPanel modelImportPanel = null;
    private ExtractPanel extractPanel = null;
    private ExecuteInsertPanel executeInserPanel = null;
    public static final String TITLE = "数据抽取执行器";
    public static final String FRAME_ICON = "Extracts.gif";

    /** Creates new form TransferPanel */
    public TransferPanel() {
        initComponents();
        init();
    }

    private void init() {
        try {
            config = RepositoryCache.getCurrentConfig();
            sourceModelPacker = new SourceModelPacker(config);
            sourceModelPacker.setOutput(output);
            sourceModelPacker.pack();

            modelImportPanel = new ModelImportPanel();
            modelImportPanel.setTransferPanel(this);
            modelImportPanel.setOutput(output);
            modelImportPanel.setDatabase(sourceModelPacker.getPackedModel());
            modelImportPanel.setDestination(config.getDestination());
            tab.add("导入临时表结构", modelImportPanel);

            extractPanel = new ExtractPanel();
            getExtractPanel().setTransferPanel(this);
            getExtractPanel().setOutput(output);
            getExtractPanel().setDataTransferConfig(config);
            getExtractPanel().setSourceModelPacker(sourceModelPacker);
            extractPanel.init();
            tab.add("抽取临时表数据", getExtractPanel());

            setExecuteInserPanel(new ExecuteInsertPanel());
            getExecuteInserPanel().setTransferPanel(this);
            getExecuteInserPanel().setOutput(output);
            getExecuteInserPanel().setDataTransferConfig(config);
            tab.add("生成目标表数据", getExecuteInserPanel());


        } catch (DataTransferException e) {
            output.error("封装源数据库失败！", e);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tab = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        output = new datatransfer.gui.swing.OutputPanel();

        setLayout(new java.awt.BorderLayout());

        tab.setMinimumSize(new java.awt.Dimension(500, 200));
        tab.setName("tab"); // NOI18N
        add(tab, java.awt.BorderLayout.CENTER);

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        output.setMaximumSize(new java.awt.Dimension(32767, 40));
        output.setMinimumSize(new java.awt.Dimension(164, 40));
        output.setName("output"); // NOI18N
        output.setPreferredSize(new java.awt.Dimension(531, 140));
        jPanel2.add(output, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private datatransfer.gui.swing.OutputPanel output;
    private javax.swing.JTabbedPane tab;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the extractPanel
     */
    public ExtractPanel getExtractPanel() {
        return extractPanel;
    }

    /**
     * @return the executeInserPanel
     */
    public ExecuteInsertPanel getExecuteInserPanel() {
        return executeInserPanel;
    }

    /**
     * @param executeInserPanel the executeInserPanel to set
     */
    public void setExecuteInserPanel(ExecuteInsertPanel executeInserPanel) {
        this.executeInserPanel = executeInserPanel;
    }
}
