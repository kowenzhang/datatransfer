/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ExecuteInsertPanel.java
 *
 * Created on 2012-8-24, 10:58:25
 */
package datatransfer.gui.extract;

import datatransfer.Output;
import datatransfer.config.DataTransferConfig;
import datatransfer.config.TransferQuery;
import datatransfer.extract.ExecuteQueryTaskTableModel;
import datatransfer.extract.QueryExecuteTask;
import datatransfer.extract.QueryTaskExecutor;
import java.util.ArrayList;
import java.util.List;
import org.executequery.repository.RepositoryCache;
import pl.mpak.sky.gui.swing.MessageBox;
import pl.mpak.util.StringUtil;

/**
 *
 * @author kowen
 */
public class ExecuteInsertPanel extends javax.swing.JPanel {

    private Output output;
    private TransferPanel transferPanel = null;
    private DataTransferConfig dataTransferConfig;
    private QueryTaskExecutor qte;

    /** Creates new form ExecuteInsertPanel */
    public ExecuteInsertPanel() {
        initComponents();
        ExecuteQueryTaskTableModel tablemodel = new ExecuteQueryTaskTableModel(
                new QueryExecuteTask[0]);
        this.jTable1.setModel(tablemodel);
    }
    
    public void start(){
        btnInitTaskListActionPerformed(null);
        btnExecuteActionPerformed(null);        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        taskList = new java.util.ArrayList<datatransfer.extract.QueryExecuteTask>();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtQueryThreadNum = new javax.swing.JTextField();
        btnExecute = new javax.swing.JButton();
        btnInitTaskList = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(538, 40));

        jLabel3.setText("执行线程数"); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        txtQueryThreadNum.setText("10"); // NOI18N
        txtQueryThreadNum.setName("txtQueryThreadNum"); // NOI18N

        btnExecute.setText("执行"); // NOI18N
        btnExecute.setToolTipText(""); // NOI18N
        btnExecute.setName("btnExecute"); // NOI18N
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });

        btnInitTaskList.setText("生成执行线程"); // NOI18N
        btnInitTaskList.setName("btnInitTaskList"); // NOI18N
        btnInitTaskList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInitTaskListActionPerformed(evt);
            }
        });

        btnStop.setText("停止"); // NOI18N
        btnStop.setName("btnStop"); // NOI18N
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnInitTaskList)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtQueryThreadNum, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExecute)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStop)
                .addContainerGap(165, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInitTaskList)
                    .addComponent(jLabel3)
                    .addComponent(txtQueryThreadNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExecute)
                    .addComponent(btnStop))
                .addContainerGap())
        );

        add(jPanel1, java.awt.BorderLayout.NORTH);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnInitTaskListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInitTaskListActionPerformed
        List<TransferQuery> queryList = dataTransferConfig.getTransferQuerys();
        for (TransferQuery query : queryList) {
            QueryExecuteTask qet = new QueryExecuteTask(query);
            qet.setOutput(getOutput());
            taskList.add(qet);
        }
        
        ExecuteQueryTaskTableModel tablemodel = new ExecuteQueryTaskTableModel(
                this.taskList.toArray(new QueryExecuteTask[taskList.size()]));
        this.jTable1.setModel(tablemodel);
    }//GEN-LAST:event_btnInitTaskListActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        if(this.qte!=null){
            output.prompt("正在停止线程池");
            qte.shutdown();
        }else{
            output.prompt("不能停止，线程池为空");
        }
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteActionPerformed
        if (this.getTransferPanel().getExtractPanel().hasRunningExtractTask()) {
            MessageBox.show("提示", "有正在运行的临时数据抽取任务，请先停止");
            return;
        }
        if (StringUtil.isInteger(txtQueryThreadNum.getText())) {
            qte = new QueryTaskExecutor(Integer.parseInt(txtQueryThreadNum.getText()), taskList);
            getOutput().prompt("TransferQuery进程池创建完毕，开始执行...");
            qte.execute();
            getOutput().prompt("已开始执行Insert！");
        } else {
            MessageBox.show("提示", "请输入正确的线程数");
        }
    }//GEN-LAST:event_btnExecuteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExecute;
    private javax.swing.JButton btnInitTaskList;
    private javax.swing.JButton btnStop;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.util.List<datatransfer.extract.QueryExecuteTask> taskList;
    private javax.swing.JTextField txtQueryThreadNum;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the output
     */
    public Output getOutput() {
        return output;
    }

    /**
     * @param output the output to set
     */
    public void setOutput(Output output) {
        this.output = output;
    }

    /**
     * @return the transferPanel
     */
    public TransferPanel getTransferPanel() {
        return transferPanel;
    }

    /**
     * @param transferPanel the transferPanel to set
     */
    public void setTransferPanel(TransferPanel transferPanel) {
        this.transferPanel = transferPanel;
    }

    /**
     * @return the dataTransferConfig
     */
    public DataTransferConfig getDataTransferConfig() {
        return dataTransferConfig;
    }

    /**
     * @param dataTransferConfig the dataTransferConfig to set
     */
    public void setDataTransferConfig(DataTransferConfig dataTransferConfig) {
        this.dataTransferConfig = dataTransferConfig;
    }
}
